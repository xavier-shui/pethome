<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.xavier.org.mapper.EmployeeMapper">

    <!--void save(Employee employee);-->
    <insert id="save">
        INSERT INTO t_employee (sn, name, dirPath, state, manager_id, parent_id)
        VALUES (
            #{sn},
            #{name},
            #{dirPath},
            #{state},
            #{manager.id},
            #{parent.id}
        )
    </insert>

    <!--void update(Employee employee);-->
    <update id="update">
        UPDATE t_employee SET
            sn=#{sn},
            name=#{name},
            dirPath=#{dirPath},
            state=#{state},
            manager_id=#{manager.id},
            parent_id=#{parent.id}
        WHERE id = #{id}
    </update>

    <!--void delete(Long id);-->
    <delete id="delete">
        DELETE FROM t_employee WHERE id = #{id}
    </delete>
    <!--Employee loadById(Long id);-->
    <select id="loadById" resultType="Employee">
        SELECT * FROM t_employee WHERE id = #{id}
    </select>

    <!--List<Employee> loadAll();-->
    <select id="loadAll" resultType="Employee">
        SELECT * FROM t_employee
    </select>


    <!--Long queryCount(EmployeeQuery employeeQuery);-->
    <select id="queryCount" resultType="long">
        SELECT COUNT(1) FROM t_employee d
        <include refid="querySql"/>
    </select>

    <!--List<Employee> queryData(EmployeeQuery employeeQuery);-->
    <select id="queryData" resultMap="EmployeeMap">
        SELECT
            d.*,
            e.id eid,
            e.username,
            p.id pid,
            p.NAME pname
        FROM
            t_employee d
            LEFT JOIN t_employee e ON d.manager_id = e.id
            LEFT JOIN t_employee p ON d.parent_id = p.id
        <include refid="querySql"/>
        LIMIT #{start}, #{pageSize}
    </select>
    
    <sql id="querySql">
        <where>
            <if test="keyword != null and keyword != ''">
                AND (d.sn LIKE CONCAT('%', #{keyword}, '%') OR d.name LIKE CONCAT('%', #{keyword}, '%'))
            </if>
        </where>
    </sql>

    <resultMap id="EmployeeMap" type="Employee">
        <id column="id" property="id"/>
        <result column="sn" property="sn"/>
        <result column="name" property="name"/>
        <result column="dirPath" property="dirPath"/>
        <result column="state" property="state"/>
        <result column="manager_id" property="manager_id"/>
        <result column="parent_id" property="parent_id"/>
        <association property="manager" javaType="Employee">
            <id column="eid" property="id"/>
            <result column="username" property="username"/>
        </association>
        <association property="parent" javaType="Employee">
            <id column="pid" property="id"/>
            <result column="pname" property="name"/>
        </association>
    </resultMap>

    <!--void batchDelete(List<Long> ids);-->
    <delete id="batchDelete">
        DELETE FROM t_employee WHERE id IN
        <foreach collection="list" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>
</mapper>
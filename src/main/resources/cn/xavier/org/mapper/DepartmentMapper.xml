<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.xavier.org.mapper.DepartmentMapper">

    <!--void save(Department department);-->
    <insert id="save" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        INSERT INTO t_department (sn, name, dirPath, state, manager_id, parent_id)
        VALUES (
            #{sn},
            #{name},
            #{dirPath},
            #{state},
            #{manager.id},
            #{parent.id}
        )
    </insert>

    <!--void update(Department department);-->
    <update id="update">
        UPDATE t_department SET
            sn=#{sn},
            name=#{name},
            dirPath=#{dirPath},
            state=#{state},
            manager_id=#{manager.id},
            parent_id=#{parent.id}
        WHERE id = #{id}
    </update>

    <!--void delete(Long id);-->
    <delete id="delete">
        DELETE FROM t_department WHERE id = #{id}
    </delete>

    <!--Department loadById(Long id);-->
    <select id="loadById" resultType="Department">
        SELECT * FROM t_department WHERE id = #{id}
    </select>

    <!--List<Department> loadAll();-->
    <select id="loadAll" resultType="Department">
        SELECT * FROM t_department
    </select>

    <!--Long queryCount(DepartmentQuery departmentQuery);-->
    <select id="queryCount" resultType="long">
        SELECT COUNT(1) FROM t_department d
        <include refid="querySql"/>
    </select>

    <!--List<Department> queryData(DepartmentQuery departmentQuery);-->
    <select id="queryData" resultMap="DepartmentMap">
        SELECT
            d.*,
            e.id eid,
            e.username,
            p.id pid,
            p.NAME pname
        FROM
            t_department d
            LEFT JOIN t_employee e ON d.manager_id = e.id
            LEFT JOIN t_department p ON d.parent_id = p.id
        <include refid="querySql"/>
        LIMIT #{start}, #{pageSize}
    </select>
    
    <sql id="querySql">
        <where>
            <if test="keyword != null and keyword != ''">
                AND (d.sn LIKE CONCAT('%', #{keyword}, '%') OR d.name LIKE CONCAT('%', #{keyword}, '%'))
            </if>
        </where>
    </sql>

    <resultMap id="DepartmentMap" type="Department">
        <id column="id" property="id"/>
        <result column="sn" property="sn"/>
        <result column="name" property="name"/>
        <result column="dirPath" property="dirPath"/>
        <result column="state" property="state"/>
        <result column="manager_id" property="manager_id"/>
        <result column="parent_id" property="parent_id"/>
        <association property="manager" javaType="Employee">
            <id column="eid" property="id"/>
            <result column="username" property="username"/>
        </association>
        <association property="parent" javaType="Department">
            <id column="pid" property="id"/>
            <result column="pname" property="name"/>
        </association>
    </resultMap>

    <!--void batchDelete(List<Long> ids);-->
    <delete id="batchDelete">
        DELETE FROM t_department WHERE id IN
        <foreach collection="list" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>

    <!--List<Department> loadTree();-->
    <select id="loadTree" resultMap="treeMap">
        SELECT
            p.id,
            p.NAME,
            c.id cid,
            c.NAME cname
        FROM
            t_department p
            LEFT JOIN t_department c ON p.id = c.parent_id
        WHERE
            p.parent_id IS NULL
    </select>

    <resultMap id="treeMap" type="Department">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <collection property="children" ofType="Department">
            <id column="cid" property="id"/>
            <result column="cname" property="name"/>
        </collection>
    </resultMap>
</mapper>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.xavier.product.mapper.ProductMapper">

    <select id="loadById" parameterType="long" resultType="Product">
        select * from t_product where id = #{id}
    </select>

    <!--void batchDelete(List<Long> ids);-->
    <delete id="batchDelete">
        DELETE FROM t_product
        WHERE id IN
        <foreach collection="list" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>

    <!--void batchOnOrOffTheMarket(Map<String, Object> params);-->
    <update id="batchOnOrOffTheMarket" parameterType="map">
        UPDATE t_product SET state = #{state},
        <choose>
            <when test="state == 0">
                offsaletime = #{date}
            </when>
            <otherwise>
                onsaletime = #{date}
            </otherwise>
        </choose>
        WHERE id IN
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </update>

    <insert id="save" parameterType="Product" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        insert into t_product
        (
            name,
            resources,
            saleprice,
            offsaletime,
            onsaletime,
            state,
            costprice,
            createtime,
            salecount,
            shop_id
        )
        values (
           #{ name},
           #{ resources},
           #{ saleprice},
           #{ offsaletime},
           #{ onsaletime},
           #{ state},
           #{ costprice},
           #{ createtime},
           #{ salecount},
           #{ shop_id}
        )
    </insert>
    <update id="update" parameterType="Product">

        update t_product set
            name = #{name},
            resources = #{resources},
            saleprice = #{saleprice},
            offsaletime = #{offsaletime},
            onsaletime = #{onsaletime},
            state = #{state},
            costprice = #{costprice},
            createtime = #{createtime},
            salecount = #{salecount},
            shop_id = #{shop_id}
        where id = #{id}
    </update>
    <delete id="delete" parameterType="long">
        DELETE from t_product where id=#{id}
    </delete>

    <sql id="whereSql">
        <where>
            <if test="keyword!=null and keyword!=''">
                and p.name like concat('%',#{keyword},'%')
            </if>
            <if test="state!=null">
                and p.state = #{state}
            </if>
        </where>
    </sql>
    <!--//查询总条数-->
    <!--Long queryCount(BaseQuery query);-->
    <select id="queryCount" resultType="long" parameterType="ProductQuery">
        select count(*) from t_product p
        <include refid="whereSql"/>
    </select>
    <!--//查询数据-->
    <!--List<T> queryData(BaseQuery query);-->
    <select id="queryData" resultMap="ProductMap1">
         SELECT p.*, s.id AS sid, s.name AS sname
         FROM t_product AS p
            LEFT JOIN t_shop s ON p.shop_id = s.id
         <include refid="whereSql"/>
         limit #{start},#{pageSize}
    </select>
    <resultMap id="ProductMap1" type="Product">
        <id property="id" column="id"></id>
        <result property="name" column="name"></result>
        <result property="resources" column="resources"></result>
        <result property="saleprice" column="saleprice"></result>
        <result property="costprice" column="costprice"></result>
        <result property="offsaletime" column="offsaletime"></result>
        <result property="onsaletime" column="onsaletime"></result>
        <result property="state" column="state"></result>
        <result property="createtime" column="createtime"></result>
        <result property="salecount" column="salecount"></result>
        <association property="shop" javaType="Shop">
            <id property="id" column="sid"></id>
            <result property="name" column="sname"></result>
        </association>
    </resultMap>


    <!--select * from t_product p left join t_product_detail pd on p.id = pd.product_id where p.id = #{id}-->
    <!--AND p.state = 1 用来防止客户回退到已领养宠物页面 -->
    <!--Product loadDetailById(Long id)-->
    <select id="loadDetailById" parameterType="long" resultMap="productMap">
        SELECT p.*,
            pd.id pdid, pd.orderNotice, pd.intro,
            s.id sid, s.name sname
        FROM
            t_product p
        LEFT JOIN t_product_detail pd ON p.id = pd.product_id
        LEFT JOIN t_shop s ON p.shop_id = s.id
        where p.id = #{id} AND p.state = 1
    </select>
    <resultMap id="productMap" type="Product">

        <id property="id" column="id"></id>
        <result property="name" column="name"></result>
        <result property="resources" column="resources"></result>
        <result property="saleprice" column="saleprice"></result>
        <result property="costprice" column="costprice"></result>
        <result property="offsaletime" column="offsaletime"></result>
        <result property="onsaletime" column="onsaletime"></result>
        <result property="state" column="state"></result>
        <result property="createtime" column="createtime"></result>
        <result property="shop_id" column="shop_id"></result>
        <result property="salecount" column="salecount"></result>
        <!--private ProductDetail detail = new ProductDetail();-->
        <association property="detail" javaType="ProductDetail">
            <id property="id" column="pdid"></id>
            <result property="intro" column="intro"></result>
            <result property="orderNotice" column="orderNotice"></result>
        </association>
        <association property="shop" javaType="Shop">
            <id property="id" column="sid"></id>
            <result property="name" column="sname"></result>
        </association>
    </resultMap>
</mapper>